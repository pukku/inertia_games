package stalbans.inertiagames;import java.awt.*;import java.lang.Math;public class DynatrackPanel extends RocketPanel {		private int CENTER_X;	private int CENTER_Y;		private int INNER_R;	private int OUTER_R;		public DynatrackPanel(RocketPanelCreator r) {		super(r);	}		public void setSize(Dimension d) {		super.setSize(d);		CENTER_X = getWidth() / 2;		CENTER_Y = getHeight() / 2;	}		public void setRadii(int i, int o) {		INNER_R = i;		OUTER_R = o;	}		private void drawCircle(Graphics g, int r, int x, int y) {		g.drawOval(x-r, y-r, 2*r, 2*r);	}		protected void paintGameScreen(Graphics g) {		drawCircle(g, INNER_R, CENTER_X, CENTER_Y);		drawCircle(g, OUTER_R, CENTER_X, CENTER_Y);	}		public boolean gameOver() {		return false;	}		private int dist(int x1, int y1, int x2, int y2) {		int deltax = x1 - x2;		int deltay = y1 - y2;				return (int)Math.round(Math.sqrt( (deltax * deltax) + (deltay * deltay) ));	}		public boolean crashed() {		int rocketDist = dist((int)Math.round(theRocket.getx()), getHeight() - (int)Math.round(theRocket.gety()), CENTER_X, CENTER_Y);		if ((rocketDist < INNER_R) || (rocketDist > OUTER_R))				{ return true; }		else	{ return false; }	}}