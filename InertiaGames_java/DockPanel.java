package stalbans.inertiagames;import java.awt.*;import java.lang.Math;public class DockPanel extends RocketPanel {	private final int CIRCLE_RADIUS = 10;		// radius of the dock	private int CIRCLE_X;	private int CIRCLE_Y;		public DockPanel(RocketPanelCreator r) {		super(r);	}		// we override setSize (from Component) since we can't get the width of the panel until we do	public void setSize(Dimension d) {		super.setSize(d);		CIRCLE_X = getWidth() / 2;		CIRCLE_Y = 40;	}		// draw a circle at CIRCLE_X, CIRCLE_Y of radius CIRCLE_RADIUS	protected void paintGameScreen(Graphics g) {		g.drawOval(CIRCLE_X - CIRCLE_RADIUS, CIRCLE_Y - CIRCLE_RADIUS, 2*CIRCLE_RADIUS, 2*CIRCLE_RADIUS);	}		// the player has won if the rocket is stopped in the circle	public boolean gameOver() {		int theY = getHeight() - (int)Math.round(theRocket.gety());		int theX = (int)Math.round(theRocket.getx());				// if we are less than CIRCLE_RADIUS away from the center		int distOff = ((theX - CIRCLE_X) * (theX - CIRCLE_X)) + ((theY - CIRCLE_Y) * (theY - CIRCLE_Y));		boolean withinCircle = (distOff < (CIRCLE_RADIUS * CIRCLE_RADIUS));		// and our speed is zero		double rSpeed = theRocket.getSpeed();		boolean stopped = (Math.round(rSpeed) == 0);				if (withinCircle && stopped)	{ return true; }		else 							{ return false; }	}}